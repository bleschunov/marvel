{"version":3,"file":"static/js/921.d79df5be.chunk.js","mappings":"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","sources":["components/appBanner/appBanner.js","components/error/error.js","components/comicList/comicList.js","components/pages/comicsPage.js","hooks/http.hook.js","services/marvelService.js","utils/getContent.js"],"sourcesContent":["import './appBanner.scss'\n\nimport avengers from '../../resources/images/avengers.png'\nimport avengersLogo from '../../resources/images/avengersLogo.png'\n\nconst AppBanner = ({className}) => {\n    return (\n        <section className={`appBanner ${className}`}>\n            <div className=\"appBanner__flex\">\n                <img src={avengers} alt=\"avengers\" className=\"appBanner__avengers\" />\n                <h2 className=\"appBanner__header\">\n                    New comics every week! <br />\n                    Stay tuned!\n                </h2>\n                <img src={avengersLogo} alt=\"avengers logo\" className=\"appBanner__avengersLogo\" />    \n            </div>\n        </section>\n    )\n}\n\nexport default AppBanner","import './error.scss'\n\nimport error from './error.gif'\n\nconst Error = props => {\n    return (\n        <img src={error} alt=\"error\" className={`error ${props.className}`} />\n    )\n}\n\nexport default Error","import { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport useMarvelService from '../../services/marvelService'\n\nimport getContent from '../../utils/getContent'\n\nimport './comicList.scss'\nimport '../../styles/button.scss'\n\nconst ComicList = props => {\n    const \n        [comics, setComics] = useState([]),\n        [offset, setOffset] = useState(1000),\n        [isEnd, setIsEnd] = useState(false)\n\n    const {process, getComics} = useMarvelService()\n\n    useEffect(() => loadComics(8), [])\n\n    function onLoaded(newComics, number) {\n        setComics(comics => [...comics, ...newComics])\n        setOffset(offset => offset + number)\n        setIsEnd(newComics.length < 8)\n    }\n\n    function loadComics(number) {\n        getComics(number, offset)\n            .then(comics => onLoaded(comics, number))\n    }\n\n    function renderCards(comics) {\n        return comics.map(item => {\n            const {id, price, thumbnail, title} = item\n\n            return (\n                <CSSTransition \n                    key={id} \n                    timeout={500} \n                    classNames=\"comicList__card\">\n                    <li \n                        tabIndex='0'\n                        className=\"comicList__card\">\n                        <Link to={`${id}`}>\n                            <img src={thumbnail} className=\"comicList__img\" alt={title} />\n                            <h3 className=\"comicList__header\">{title}</h3>\n                            <div className=\"comicList__price\">{price}</div>\n                        </Link>\n                    </li>\n                </CSSTransition>\n            )\n        })\n    }\n\n    const Footer = () => {\n        if (isEnd) return null\n        else return (\n            <button \n                onClick={() => loadComics(8)} \n                className=\"button button_red button_long\">\n                load more\n            </button>\n        )\n    }\n\n    return (\n       <section className={`comicList ${props.className}`}>\n           <div className=\"comicList__grid\">\n                <TransitionGroup component={null}>\n                    {renderCards(comics)}\n                </TransitionGroup>\n            </div>\n            <div className=\"comicList__footer\">\n                {getContent(process, Footer)}\n            </div>\n        </section>\n    )\n}\n\nexport default ComicList","import Helmet from 'react-helmet'\n\nimport AppBanner from \"../appBanner/appBanner\"\nimport ComicList from \"../comicList/comicList\"\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <Helmet>\n            <meta\n                name=\"description\"\n                content=\"List of comics\" />\n                <title>Comics</title>\n            </Helmet>\n            <AppBanner className=\"app__appBanner\" />\n            <ComicList className=\"app_comicList\" />\n        </>\n    )\n}\n\nexport default ComicsPage","import { useState } from 'react'\n\nconst useHttp = () => {\n    const [process, setProcess] = useState('waiting')\n\n    async function getResource(url) {\n        setProcess('fetching')\n\n        let res\n        try {\n            res = await fetch(url)\n\n            if (!res.ok && res.status !== 404) {\n                throw new Error(`Could not fetch ${url}, status is ${res.status}`)\n            }\n\n            setProcess('waiting')\n            return await res.json()\n        } catch (error) {\n            console.log(error)\n            setProcess('error')\n        }\n    }\n\n    return {getResource, process}\n}\n\nexport default useHttp","import md5 from 'md5'\nimport usehttp from '../hooks/http.hook'\n\nconst useMarvelService = () => {\n    const {getResource, process} = usehttp()\n\n    const \n        _apiBase = 'https://gateway.marvel.com:443/v1/public/',\n        _apiPublicKey = '501c32c8096d96aabefe16305a1b4371',\n        _apiPrivateKey = 'cf3a965c94a82a96ab36e31940ad7a43fba9af96',\n        _ts = '1',\n        _hash = md5(_ts + _apiPrivateKey + _apiPublicKey),\n        _apiAuth = `?apikey=${_apiPublicKey}&ts=${_ts}&hash=${_hash}`\n\n    async function getCharacter(id) {\n        const res = await getResource(`${_apiBase}characters/${id + _apiAuth}`)\n        return _transformChar(res.data.results[0])\n    }\n\n    async function getCharacterByName(name) {\n        const res = await getResource(`${_apiBase}characters?name=${name}&apikey=${_apiPublicKey}`)\n        if (res.data.results[0]) return _transformChar(res.data.results[0])\n        else throw new Error()\n    }\n\n    async function getRandomCharacter() {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n        try {\n            const res = await getResource(`${_apiBase}characters/${id + _apiAuth}`)\n\n            if (res.code === 404) {\n                throw new Error(`The character with id ${id} does not exist`)\n            }\n\n            return _transformChar(res.data.results[0])\n        } catch (error) {\n            return await getRandomCharacter()\n        }\n    }\n\n    async function getCharacters(number, offset) {\n        const res = await getResource(`${_apiBase}characters${_apiAuth}&limit=${number}&offset=${offset}`)\n        return res.data.results.map(char => _transformChar(char))\n    }\n\n    async function getComic(id) {\n        const res = await getResource(`${_apiBase}comics/${id + _apiAuth}`)\n        return _transformComic(res.data.results[0])\n    }\n\n    async function getComics(number, offset) {\n        const res = await getResource(`${_apiBase}comics${_apiAuth}&limit=${number}&offset=${offset}`)\n        return res.data.results.map(comic => _transformComic(comic))\n    }\n\n    function _transformChar({id, name, description, thumbnail, urls, comics}) {\n        description = description.length > 230 ? description.slice(0, 228) + '...' : description\n        \n        return {\n            id: String(id),\n            name,\n            description: description ? description : 'Description is not available :(',\n            thumbnail: thumbnail.path + '.' + thumbnail.extension,\n            homepage: urls[0].url,\n            wiki: urls[0].url,\n            comics: comics.items\n        }\n    }\n\n    function _transformComic({id, title, prices, thumbnail, description, textObjects, pageCount}) {\n        return {\n            id: String(id),\n            price: prices[0].price + '$',\n            description: description ? description : 'Description is not available :(',\n            language: textObjects.language ? 'Language: ' + textObjects.language : null,\n            thumbnail: thumbnail.path + '.' + thumbnail.extension,\n            title,\n            pageCount: pageCount ? pageCount + ' pages' : null\n        }\n    }\n\n    return {\n        process,\n        getCharacter, \n        getCharacterByName,\n        getRandomCharacter, \n        getCharacters, \n        getComic,\n        getComics\n    }\n}\n\nexport default useMarvelService","import Spinner from \"../components/spinner/spinner\"\nimport Error from \"../components/error/error\"\n\nconst getContent = (process, Component, data=null) => {\n    switch (process) {\n        case 'waiting': \n            return <Component {...data} />\n        case 'fetching':\n            return <Spinner />\n        case 'error':\n            return <Error />\n    }\n}\n\nexport default getContent"],"names":["className","src","avengers","alt","avengersLogo","props","error","useState","comics","setComics","offset","setOffset","isEnd","setIsEnd","useMarvelService","process","getComics","loadComics","number","then","newComics","length","onLoaded","useEffect","TransitionGroup","component","map","item","id","price","thumbnail","title","CSSTransition","timeout","classNames","tabIndex","to","renderCards","getContent","onClick","Helmet","name","content","setProcess","url","fetch","res","ok","status","Error","json","console","log","getResource","usehttp","_apiBase","_apiPublicKey","_hash","md5","_ts","_apiAuth","_transformChar","data","results","getRandomCharacter","Math","floor","random","code","char","_transformComic","comic","description","urls","slice","String","path","extension","homepage","wiki","items","prices","textObjects","pageCount","language","getCharacter","getCharacterByName","getCharacters","getComic","Component"],"sourceRoot":""}